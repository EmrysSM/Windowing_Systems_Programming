/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project1;

import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 *
 * @author aaron
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    String currentVehicle = "\\src\\resources\\red_car.png";
    JPanel cards;
    CardLayout cardLayout;
    int lastScore;
    int frameCount;
    int money;
    int currentPanel = 0;
    Store store;
    HighScores highScores;
    GamePanel game;
    
    public mainFrame() throws FileNotFoundException {
        initComponents();
        //next two lines need to be changed
        money = 2001;
        String localDir = System.getProperty("user.dir");
        File inFile = new File(localDir + "\\src\\resources\\money.txt");
        Scanner scan = new Scanner(inFile);
        String moneyString = scan.next();
        money = Integer.parseInt(moneyString);
        
        
        
        //Next line will need to change once we are able to set lastScore on the close of the game panel
        lastScore = 1000;
        
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((screen.getWidth() - getWidth()) /2);
        int y = (int) ((screen.getHeight() - getHeight()) /2);
        setLocation(x, y); 
        this.setLayout(new CardLayout());
        mainMenu mainScreen = new mainMenu();
        //currentPanel = 0;
        store = new Store();
        
        inFile = new File(localDir + "\\src\\resources\\Owned.txt");
        scan = new Scanner(inFile);
        for(int i = 0; i < 9; i++)
        {
            switch(scan.next())
            {
                case "true":
                    store.setCarsOwned(i, true);
                    break;
                case "false":
                    store.setCarsOwned(i, false);
                    break;
            }
        }

        //Game panel and timing variables for it
        game = new GamePanel();
        boolean running = false;
        boolean paused = false;
        int fps = 60;
        frameCount = 0;

        gameOver results = new gameOver();
        highScores = new HighScores();
        cards = new JPanel(new CardLayout());

        cards.add(mainScreen, "main screen");
        cards.add(store, "store");
        cards.add(game, "game");
        cards.add(results, "results");
        cards.add(highScores, "highscores");
        
        getContentPane().add(cards); 
        
        cardLayout = (CardLayout) cards.getLayout();
        cardLayout.show(cards, "main screen");
    }
    
    public void changeContext(String panel)
    {
        cardLayout.show(cards, panel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //TODO write money amount to a file, write owned vehicles to a file, 
        //write high scores to a file
        String localDir = System.getProperty("user.dir");
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter(localDir + "\\src\\resources\\money.txt"));
            writer.write(money + "");
            writer.flush();
            writer = new BufferedWriter(new FileWriter(localDir + "\\src\\resources\\Owned.txt"));
            for(int i = 0; i< 9; i++)
            {
                writer.write(store.getCarsOwned(i) + " ");
            }
            writer.flush();
            writer  = new BufferedWriter(new FileWriter(localDir + "\\src\\resources\\scores.csv"));
            for(int i = 0; i < 5; i++)
            {
                writer.write(highScores.getHighScore(i).getName() + " " + highScores.getHighScore(i).getScore());
                writer.newLine();
            }
            writer.flush();
            writer.close();
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    mainFrame mainFrame = new mainFrame();
                    mainFrame.setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    public void setCurrentVehicle(String i)
    {
        currentVehicle = i;
    }
    public String getCurrentVehicle()
    {
        return currentVehicle;
    }

    void setLastScore(int c) {
       lastScore = c;
    }
    int getLastScore()
    {
        return lastScore;
    }
    int getMoney()
    {
        return money;
    }
    void setMoney(int m)
    {
        money = m;
    }
    int getCurrentPanel()
    {
        return currentPanel;
    }

    HighScores getHighScores()
    {
        return highScores;
    }
    
    void newGame()
    {
        cards.remove(game);
        game = new GamePanel();
        cards.add(game, "game");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
