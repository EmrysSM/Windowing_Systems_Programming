/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project1;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.*;
import java.awt.event.*;
import java.util.Random;
import javax.swing.*;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import javax.swing.SwingUtilities;

/**
 *
 * @author aaron
 */
public class GamePanel extends javax.swing.JPanel {

    /**
     * Creates new form GamePanel
     */
    Image img;
    int currentScore;
    mainFrame topFrame;
    Car pCar;
    

    public GamePanel() {
        initComponents();
        topFrame = (mainFrame) SwingUtilities.getWindowAncestor(this);
        String localDir = System.getProperty("user.dir");
        img = Toolkit.getDefaultToolkit().createImage(localDir + "\\src\\resources\\streetBackground.png");
//        this.setBackground(Color.black);
    }
    
    public static void generateObstacles(JPanel panel) {
        Random rand = new Random();
        
        Timer time = new Timer(1000, new ActionListener() { 
//        while(true) {
            @Override
            public void actionPerformed(ActionEvent e) {
                int num = rand.nextInt(7);
                int xLoc = num * 100 + 50;
                panel.add(new Car(xLoc, 0, 0, 1, 0, 1, 10));
    //            try {
    //                Thread.sleep(1000);
    //            } catch(Exception e) {
    //                System.out.println(e);
    //            }
            }
        });
        time.start();
    }
    
    public void gameOver(){
        topFrame.setLastScore(currentScore);
        topFrame.changeContext("results");
    }
    
    @Override
    public void paintComponent(Graphics g)
    {
       g.drawImage(img, 0, 0, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        generateObstacles(this);
    }//GEN-LAST:event_formComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
